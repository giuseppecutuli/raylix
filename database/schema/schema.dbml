enum trip_status {
  SCHEDULED
  RUNNING
  COMPLETED
  CANCELED
  DELAYED
}

enum booking_status {
  PENDING
  CONFIRMED
  CANCELED
  REFUNDED
}

enum ticket_status {
  VALID
  USED
  CANCELED
  REFUNDED
}

enum payment_status {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum seat_type {
  WINDOW
  AISLE
  MIDDLE
  TABLE
  COUCHETTE_LOWER
  COUCHETTE_MIDDLE
  COUCHETTE_UPPER
  SLEEPER_SINGLE
  SLEEPER_DOUBLE
}

enum seat_orientation {
  FORWARD
  BACKWARD
  FACING_TABLE
}

enum cabin_type {
  COUCHETTE_4
  COUCHETTE_6
  SLEEPER_SINGLE
  SLEEPER_DOUBLE
}

enum currency_code {
  EUR
  GBP
  CHF
  SEK
  NOK
  DKK
  PLN
  CZK
  HUF
  RON
  BGN
  HRK
  USD
}

enum payment_method {
  CREDIT_CARD
  DEBIT_CARD
  PAYPAL
  SEPA_DIRECT_DEBIT
  BANCONTACT
  IDEAL
  SOFORT
  GIROPAY
  APPLE_PAY
  GOOGLE_PAY
}

table countries {
  id string pk
  name string
  iso_code string [unique]
  created_at datetime
  updated_at datetime
}

table railway_operators {
  id string pk
  name string
  country_id string [ref: > countries.id]
  code string [unique]
  website string [null]
  created_at datetime
  updated_at datetime

  indexes {
    (country_id)
  }
}

table cities {
  id string pk
  name string
  country_id string [ref: > countries.id]
  latitude double
  longitude double
  created_at datetime
  updated_at datetime

  indexes {
    (country_id)
  }
}

table stations {
  id string pk
  name string
  city_id string [ref: > cities.id]
  latitude double
  longitude double
  platforms jsonb [null]
  created_at datetime
  updated_at datetime

  indexes {
    (city_id)
    (latitude, longitude)
    (name)
    platforms [type: gin]
  }
}

table users {
  id string pk
  first_name string
  last_name string
  email string [unique]
  password string
  created_at datetime
  updated_at datetime
}

table passengers {
  id string pk
  user_id string [ref: > users.id, null]
  first_name string
  last_name string
  email string [null]
  phone string [null]
  document_number string [null]
  created_at datetime
  updated_at datetime

  indexes {
    (user_id)
    (email)
  }
}

table service_types {
  id string pk
  name string
  code string [unique]
  requires_seat_assignment bool [default: true]
  allows_standing bool [default: false]
  created_at datetime
  updated_at datetime
}

table wagon_categories {
  id string pk
  name string
  created_at datetime
  updated_at datetime
}

table wagons {
  id string pk
  code string [unique]
  category_id string [ref: > wagon_categories.id]
  total_seats integer
  total_rows integer
  seats_per_row integer
  layout_pattern string
  row_numbering_start integer [default: 1]
  created_at datetime
  updated_at datetime
}

table cabins {
  id string pk
  wagon_id string [ref: > wagons.id]
  cabin_number string
  cabin_type cabin_type
  total_beds integer
  has_private_bathroom bool [default: false]
  created_at datetime
  updated_at datetime

  indexes {
    (wagon_id, cabin_number) [unique]
  }
}

table wagon_seats {
  id string pk
  wagon_id string [ref: > wagons.id]
  cabin_id string [ref: > cabins.id, null]
  seat_number string
  seat_type seat_type
  seat_orientation seat_orientation [default: 'FORWARD']
  row_number integer
  column_letter string
  is_accessible bool [default: false]
  created_at datetime
  updated_at datetime

  indexes {
    (wagon_id, seat_number) [unique]
    (wagon_id, seat_type)
    (cabin_id)
  }
}

table trains {
  id string pk
  code string [unique]
  model string
  is_ship bool [default: false]
  created_at datetime
  updated_at datetime
}

table train_wagons {
  train_id string [ref: > trains.id]
  wagon_id string [ref: > wagons.id]
  position integer
  created_at datetime
  updated_at datetime

  indexes {
    (train_id, wagon_id) [pk]
    (train_id, position) [unique]
  }
}

table routes {
  id string pk
  name string
  description string
  created_at datetime
  updated_at datetime
}

table route_stations {
  id string pk
  route_id string [ref: > routes.id]
  station_id string [ref: > stations.id]
  sequence integer
  arrival_offset_min integer [null]
  departure_offset_min integer [null]
  platform string [null]
  created_at datetime
  updated_at datetime

  indexes {
    (route_id, sequence) [unique]
    (route_id, station_id) [unique]
    (station_id, platform)
  }
}

table train_services {
  id string pk
  train_id string [ref: > trains.id]
  route_id string [ref: > routes.id]
  service_type_id string [ref: > service_types.id]
  operator_id string [ref: > railway_operators.id]
  departure_time time
  service_name string [null]
  operates_days jsonb
  valid_from date
  valid_to date
  cabins_enabled bool [default: false]
  created_at datetime
  updated_at datetime

  indexes {
    (operator_id)
    (service_type_id)
    (route_id, departure_time)
    (operator_id, service_type_id)
    (valid_from, valid_to)
  }
}

table service_exceptions {
  id string pk
  train_service_id string [ref: > train_services.id]
  exception_date date
  is_running bool
  reason string [null]
  created_at datetime
  updated_at datetime

  indexes {
    (train_service_id, exception_date) [unique]
    (exception_date)
  }
}

table trips {
  id string pk
  train_service_id string [ref: > train_services.id]
  service_date date
  planned_departure_time datetime
  planned_arrival_time datetime
  status trip_status [default: 'SCHEDULED']
  delay_minutes integer [default: 0]
  created_at datetime
  updated_at datetime

  indexes {
    (train_service_id, service_date) [unique]
    (service_date, status)
    (service_date, delay_minutes)
    (planned_departure_time)
    (status, planned_departure_time)
  }
}

table trip_station_updates {
  id string pk
  trip_id string [ref: > trips.id]
  route_station_id string [ref: > route_stations.id]
  planned_arrival datetime [null]
  planned_departure datetime [null]
  actual_arrival datetime [null]
  actual_departure datetime [null]
  delay_minutes integer [null]
  updated_at datetime
  created_at datetime

  indexes {
    (trip_id, route_station_id) [unique]
    (trip_id)
    (updated_at)
    (trip_id, updated_at)
    (delay_minutes, updated_at)
  }
}

table bookings {
  id string pk
  booking_reference string [unique]
  user_id string [ref: > users.id, null]
  passenger_id string [ref: > passengers.id]
  origin_station_id string [ref: > stations.id]
  destination_station_id string [ref: > stations.id]
  departure_date date
  total_amount decimal [null]
  currency currency_code [default: 'EUR']
  status booking_status [default: 'PENDING']
  created_at datetime
  updated_at datetime

  indexes {
    (user_id)
    (passenger_id)
    (booking_reference)
    (departure_date)
    (origin_station_id, destination_station_id)
    (user_id, created_at)
    (status, created_at)
    (departure_date, status)
  }
}

table booking_segments {
  id string pk
  booking_id string [ref: > bookings.id]
  trip_id string [ref: > trips.id]
  sequence integer
  origin_station_id string [ref: > stations.id]
  destination_station_id string [ref: > stations.id]
  origin_route_station_id string [ref: > route_stations.id]
  destination_route_station_id string [ref: > route_stations.id]
  planned_departure_time datetime
  planned_arrival_time datetime
  connection_time_minutes integer [null]
  platform_departure string [null]
  platform_arrival string [null]
  distance_km decimal
  segment_amount decimal
  created_at datetime
  updated_at datetime

  indexes {
    (booking_id, sequence) [unique]
    (trip_id)
    (booking_id)
    (planned_departure_time)
  }
}

table fares {
  id string pk
  route_id string [ref: > routes.id, null]
  operator_id string [ref: > railway_operators.id, null]
  origin_country_id string [ref: > countries.id, null]
  destination_country_id string [ref: > countries.id, null]
  wagon_category_id string [ref: > wagon_categories.id, null]
  service_type_id string [ref: > service_types.id, null]
  distance_min_km integer
  distance_max_km integer
  base_fare decimal
  fare_per_km decimal
  is_cross_border bool [default: false]
  international_supplement decimal [null]
  currency currency_code [default: 'EUR']
  valid_from datetime
  valid_to datetime
  created_at datetime
  updated_at datetime

  indexes {
    (route_id, operator_id, wagon_category_id, service_type_id)
    (operator_id, origin_country_id, destination_country_id)
    (valid_from, valid_to)
    (service_type_id)
  }
}

table seat_reservations {
  id string pk
  booking_segment_id string [ref: > booking_segments.id]
  trip_id string [ref: > trips.id]
  wagon_seat_id string [ref: > wagon_seats.id, null]
  passenger_id string [ref: > passengers.id]
  origin_route_station_id string [ref: > route_stations.id]
  destination_route_station_id string [ref: > route_stations.id]
  expires_at datetime
  created_at datetime
  updated_at datetime

  indexes {
    (booking_segment_id) [unique]
    (trip_id, wagon_seat_id)
    (passenger_id)
    (expires_at)
    (trip_id, expires_at)
  }
}

table tickets {
  id string pk
  ticket_number string [unique]
  booking_id string [ref: > bookings.id]
  booking_segment_id string [ref: > booking_segments.id]
  passenger_id string [ref: > passengers.id]
  trip_id string [ref: > trips.id]
  origin_station_id string [ref: > stations.id]
  destination_station_id string [ref: > stations.id]
  wagon_category_id string [ref: > wagon_categories.id]
  seat_reservation_id string [ref: > seat_reservations.id, null]
  fare_amount decimal
  currency currency_code [default: 'EUR']
  status ticket_status [default: 'VALID']
  issued_at datetime
  service_date date
  created_at datetime
  updated_at datetime

  indexes {
    (booking_id)
    (booking_segment_id) [unique]
    (trip_id)
    (passenger_id)
    (service_date)
    (ticket_number)
    (service_date, trip_id)
    (passenger_id, service_date)
    (status, service_date)
  }
}

table payments {
  id string pk
  booking_id string [ref: > bookings.id]
  amount decimal
  currency currency_code [default: 'EUR']
  payment_method payment_method
  status payment_status [default: 'PENDING']
  transaction_ref string [null]
  paid_at datetime [null]
  created_at datetime
  updated_at datetime

  indexes {
    (booking_id)
  }
}